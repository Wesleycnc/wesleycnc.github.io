/* alteração do Box Model */
*,*::after,*::before {box-sizing: border-box; }
html{font-size: 14px;}

body {background-color: white;
font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;

  /* Etapa 1: colocar o body em modo flex e definir altura minima usando a viewport como referencia */
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

/* Etapa 2: fazer o conteúdo (main) ocupar todo o espaço necessário para empurrar o rodapé para baixo   */
main {
    flex: 1; 

}


img{max-width: 100%;}

/* Reset de elemento */
body,h1,h2,h3,p,figure{
    margin: 0;
    padding: 0;
  
}

h1{
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;
    font-size: 1.5rem;
    font-weight: normal;
}

a {text-decoration: none;}

h1 a { background-color: rgb(0, 0, 0);
color: rgb(255, 0, 0);
border-radius: 5px;
padding: 0.3rem 1rem;
}

header{
    background-color: white;
    text-transform: uppercase;
    /* Deixar o cabeçalho fixo */
    position: sticky;
    top: 0;
   
    
   

}

header .limitador{
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: white;
     height: 10vh;
}
/* Regra para um elemento (no caso, uma div) com
a classe limitador e dentro do header 

Importante: o flex configurado aqui funcionará somente 
para a classe limitador aplicada na div dentro do header.
Além disso, ela também estará recebendo max-width e margin
vindos da regra classe. */

.limitador{
    max-width: 1100px;
    margin: auto;
    width: 95%;
}

nav h2{text-align: right;}

nav h2 a{
    color: black;
    font-size: 1.2rem;
    padding: 1rem;
    display: inline-block; 
}

nav h2 a:hover,
nav h2 a:focus,
.links-menu a:hover,
.links-menu a:focus{
    background-color: gainsboro;
}

.links-menu{
    list-style-type: none;
    padding: 0;
    margin: 0;

    /* Esta propriedade será 
    usada posteriormente para esconder
    a lista */
    display: none; 
}
.links-menu a {
    color: black;
    font-weight: bold;
    height: 50px;
    display: flex;
    justify-content: center;
    align-items: center;

}

/* Esta regra somente ira funcionar
 quando as duas classes estiver juntas 
 (links-menu e aberto).

 obs.: esta regra será aplicada posteriormente 
 com o auxilio de programação Javascript.  */

.links-menu.aberto{
    /* Neste ponto, usamos o flex pra voltar 
    a exibir o menu (qundo aberto) */
    display: flex;
    /* E fazemos com que os links apareçam
    verticalmente */
    flex-direction: column;
    /* Usamos position e coordenadas
    para garantir o posicionamento 
    correto do menu quando aberto. */
    position: absolute;
    right: 0;
    left: 0;
}

.destaque{
    background-image: url(../imagens/fundo-destaque.jpg);
    color: white;
    height: 90vh;

    background-size: cover;
    background-attachment: fixed;
    text-align: center;
    
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    /* align-items: center; */

    /*Alinha tudo (h2 e p) ao centro  */
    align-content: center;
}

/* Sem esta definição de tamanho 
o felx-wrap não funciona  */
.destaque h2,
 .destaque p {
    width: 100%;
}

.destaque h2{ 
 /*    Font Responsiva usando 
     função clamp(minimo, ideal, maximo)  */
    font-size: clamp(2rem,10vw, 7rem);
    /* Chamar e configurar a 
    animação */
    animation-name: aparecer;
    animation-duration: 3s;
 }   

.destaque p{ 
    font-size: clamp(1.5rem, 3vw, 4rem);
    font-weight: bold;

     /* Sintaxe COMPLETA
    animation-name: aparecer;
    animation-duration: 3s;
    animation-delay: 2s;
    animation-fill-mode: backwards; */

    /* Sintaxe ABREVIADA */
    animation: aparecer 3s 2s backwards;
}

/* Etapa 1: Regra de animação */
@keyframes aparecer {
    from { 
        opacity: 0;
        transform: translateY(-100vh); 
    }

    to { 
        opacity: 1;
        transform: translateY(0);
    }
}

.front-end,
.historia,
.localizacao{text-align: center;}

article h2{ padding: 1rem; }

article p { padding: 0.5rem 0;}

.historia {
    background-image: url(../imagens/fundo-madeira.jpg);
    background-attachment: fixed;
    background-size: cover;
}

.historia h2{
    color: white;
    text-shadow: black 1px 1px 5px;
}

.historia iframe { 
    width: 100%;
    max-width: 700px;
}

footer{
    background-color: black;
    height: 15vh;
    color: white;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.conteudo{
    background-color: rgb(247, 247, 252);
    padding: 0.7rem;
    border-radius: 7px;
}
.conteudo h2{
    text-align: center;
}
table, th, td{
    border:solid 2px black;
   
    /* remove os espaços entre as bordas */
    border-collapse: collapse;
}
table{
    width: 80%;
    margin: auto;
    max-width: 600px;
}
caption{
    text-transform: uppercase;
    font-weight: bold;
    font-size: 1.1rem;
    padding-bottom: 5px;
}
th{
    background-color:black ;
    color: white;
    font-size: 1.3rem;
    padding: .5rem;
}
td{
    background-color: white;
    font-size: 1.2rem;
}

td:last-child{font-weight: bold;
text-align: right;
padding: 5px;}

/* formatando os primeiros td's */
td:first-child{text-transform: uppercase;}

/* formatando o segundo td's */ 
td:nth-child(2){text-align: center;}

/* even: par - odd: impar */ 
tr:nth-child(odd) {background-color: #ccc;}

@media screen and (min-width: 530px) {
    nav  { width: 70%;}
    nav h2 { display: none;}
    .links-menu {display: flex;}
    .links-menu li{ width: 100%; }
    
}

@media screen and (min-width: 800px) {
    html {font-size: 18px; }
    header .limitador { height: 15vh;}
    .destaque { height: 85vh; }
    
}

form{
    background-color:rgb(214, 232, 248);
    width: 95%;
    margin: auto;
    padding: 1rem;
    border-radius: 10px;
}

/* Pseudo-classe :not() 
permite criar exceções para determinadas regras.
Abaixo, estamos pegando todos os inputs exceto os do tipo redio e checkbox*/

input:not([type=radio]):not([type=checkbox]), select, textarea {
    
    border: none;
    padding: 1%;
    width: 100%;
    height: 40px;
}
textarea{ height: auto;}

button{
    background-color: black;
    color: white;
    border: none;
    padding: 1rem;
    font-weight: bold;
}

form div{margin-top: 1rem; }

